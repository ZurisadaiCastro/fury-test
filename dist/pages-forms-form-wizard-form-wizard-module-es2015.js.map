{"version":3,"sources":["./src/@fury/animations/fade-in-right.animation.ts","./src/app/pages/forms/form-wizard/form-wizard.module.ts","./src/app/pages/forms/form-wizard/form-wizard-routing.module.ts","./src/app/pages/forms/form-wizard/form-wizard.component.ts","./src/app/pages/forms/form-wizard/form-wizard.component.html","./src/@fury/animations/fade-in-up.animation.ts"],"names":[],"mappings":"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","file":"pages-forms-form-wizard-form-wizard-module-es2015.js","sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const fadeInRightAnimation = trigger('fadeInRight', [\r\n  transition(':enter', [\r\n    style({\r\n      transform: 'translateX(-2vw)',\r\n      opacity: 0\r\n    }),\r\n    animate('0.4s cubic-bezier(0.35, 0, 0.25, 1)', style({\r\n      transform: 'translateX(0)',\r\n      opacity: 1\r\n    }))\r\n  ])\r\n]);\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../../../@fury/shared/material-components.module';\r\nimport { FormWizardRoutingModule } from './form-wizard-routing.module';\r\nimport { FormWizardComponent } from './form-wizard.component';\r\nimport { FurySharedModule } from '../../../../@fury/fury-shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormWizardRoutingModule,\r\n    FurySharedModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n  ],\r\n  declarations: [FormWizardComponent]\r\n})\r\nexport class FormWizardModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormWizardComponent } from './form-wizard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FormWizardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormWizardRoutingModule {\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fadeInRightAnimation } from '../../../../@fury/animations/fade-in-right.animation';\r\nimport { scaleInAnimation } from '../../../../@fury/animations/scale-in.animation';\r\nimport { fadeInUpAnimation } from '../../../../@fury/animations/fade-in-up.animation';\r\n\r\n@Component({\r\n  selector: 'fury-form-wizard',\r\n  templateUrl: './form-wizard.component.html',\r\n  styleUrls: ['./form-wizard.component.scss'],\r\n  animations: [fadeInUpAnimation, fadeInRightAnimation, scaleInAnimation]\r\n})\r\nexport class FormWizardComponent implements OnInit {\r\n\r\n  accountFormGroup: FormGroup;\r\n  passwordFormGroup: FormGroup;\r\n  confirmFormGroup: FormGroup;\r\n\r\n  verticalAccountFormGroup: FormGroup;\r\n  verticalPasswordFormGroup: FormGroup;\r\n  verticalConfirmFormGroup: FormGroup;\r\n\r\n  phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\r\n\r\n  passwordInputType = 'password';\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private cd: ChangeDetectorRef,\r\n              private snackbar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    /**\r\n     * Horizontal Stepper\r\n     * @type {FormGroup}\r\n     */\r\n    this.accountFormGroup = this.fb.group({\r\n      username: [null, Validators.required],\r\n      name: [null, Validators.required],\r\n      email: [null, Validators.required],\r\n      phonePrefix: [this.phonePrefixOptions[3]],\r\n      phone: [],\r\n    });\r\n\r\n    this.passwordFormGroup = this.fb.group({\r\n      password: [\r\n        null,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(6)\r\n          ]\r\n        )\r\n      ],\r\n      passwordConfirm: [null, Validators.required]\r\n    });\r\n\r\n    this.confirmFormGroup = this.fb.group({\r\n      terms: [null, Validators.requiredTrue]\r\n    });\r\n\r\n    /**\r\n     * Vertical Stepper\r\n     * @type {FormGroup}\r\n     */\r\n    this.verticalAccountFormGroup = this.fb.group({\r\n      username: [null, Validators.required],\r\n      name: [null, Validators.required],\r\n      email: [null, Validators.required],\r\n      phonePrefix: [this.phonePrefixOptions[3]],\r\n      phone: [],\r\n    });\r\n\r\n    this.verticalPasswordFormGroup = this.fb.group({\r\n      password: [\r\n        null,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(6)\r\n          ]\r\n        )\r\n      ],\r\n      passwordConfirm: [null, Validators.required]\r\n    });\r\n\r\n    this.verticalConfirmFormGroup = this.fb.group({\r\n      terms: [null, Validators.requiredTrue]\r\n    });\r\n  }\r\n\r\n  showPassword() {\r\n    this.passwordInputType = 'text';\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  hidePassword() {\r\n    this.passwordInputType = 'password';\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  submit() {\r\n    this.snackbar.open('Hooray! You successfully created your account.', null, {\r\n      duration: 5000\r\n    });\r\n  }\r\n}\r\n","<fury-page>\r\n  <fury-title class=\"title\">\r\n    <mat-icon [@scaleIn]>description</mat-icon>\r\n    <span [@fadeInRight]>Form Wizard</span>\r\n  </fury-title>\r\n\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n\r\n    <div [@fadeInUp] class=\"card\">\r\n      <mat-horizontal-stepper #stepper=\"matHorizontalStepper\" [linear]=\"true\">\r\n        <mat-step [stepControl]=\"accountFormGroup\">\r\n          <form [formGroup]=\"accountFormGroup\">\r\n            <ng-template matStepLabel>Create Account</ng-template>\r\n\r\n            <div class=\"heading\">Create Account</div>\r\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Account Username</mat-label>\r\n                <input formControlName=\"username\" matInput required>\r\n                <mat-hint>This will be your unique login name.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Name</mat-label>\r\n                <input formControlName=\"name\" matInput required>\r\n                <mat-hint>How may we call you?</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\r\n                <mat-form-field fxFlex=\"auto\">\r\n                  <mat-label>E-Mail</mat-label>\r\n                  <input formControlName=\"email\" matInput required>\r\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\r\n                  <mat-form-field fxFlex=\"1 1 auto\">\r\n                    <mat-label>Code</mat-label>\r\n                    <mat-select formControlName=\"phonePrefix\">\r\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <mat-form-field fxFlex=\"2 1 auto\">\r\n                    <mat-label>Phone Number</mat-label>\r\n                    <input formControlName=\"phone\" matInput>\r\n                    <mat-hint align=\"end\"></mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button (click)=\"stepper.reset()\" [disabled]=\"accountFormGroup.pristine\" color=\"primary\" mat-button\r\n                      type=\"button\">RESET\r\n              </button>\r\n              <button [disabled]=\"accountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"passwordFormGroup\">\r\n          <form [formGroup]=\"passwordFormGroup\">\r\n            <ng-template matStepLabel>Select a Password</ng-template>\r\n\r\n            <div class=\"heading\">Select a Password</div>\r\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Please type in your password again.</mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button [disabled]=\"passwordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"confirmFormGroup\">\r\n          <form [formGroup]=\"confirmFormGroup\">\r\n            <ng-template matStepLabel>Confirm Creation</ng-template>\r\n\r\n            <div class=\"heading\">You're almost there!</div>\r\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\r\n            </div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\r\n                I agree to the terms of service and the usual stuff. *\r\n              </mat-checkbox>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button (click)=\"submit()\" [disabled]=\"confirmFormGroup.invalid\" color=\"primary\" mat-raised-button\r\n                      matStepperNext>\r\n                CREATE ACCOUNT\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n        </mat-step>\r\n      </mat-horizontal-stepper>\r\n    </div>\r\n\r\n    <div [@fadeInUp] class=\"card\">\r\n      <mat-vertical-stepper #verticalStepper=\"matVerticalStepper\" [linear]=\"true\">\r\n        <mat-step [stepControl]=\"verticalAccountFormGroup\">\r\n          <form [formGroup]=\"verticalAccountFormGroup\">\r\n            <ng-template matStepLabel>Create Account</ng-template>\r\n\r\n            <div class=\"heading\">Create Account</div>\r\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Account Username</mat-label>\r\n                <input formControlName=\"username\" matInput required>\r\n                <mat-hint>This will be your unique login name.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Name</mat-label>\r\n                <input formControlName=\"name\" matInput required>\r\n                <mat-hint>How may we call you?</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\r\n                <mat-form-field fxFlex=\"auto\">\r\n                  <mat-label>E-Mail</mat-label>\r\n                  <input formControlName=\"email\" matInput required>\r\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\r\n                  <mat-form-field fxFlex=\"1 1 auto\">\r\n                    <mat-label>Code</mat-label>\r\n                    <mat-select formControlName=\"phonePrefix\">\r\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <mat-form-field fxFlex=\"2 1 auto\">\r\n                    <mat-label>Phone Number</mat-label>\r\n                    <input formControlName=\"phone\" matInput>\r\n                    <mat-hint align=\"end\"></mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button (click)=\"verticalStepper.reset()\" [disabled]=\"verticalAccountFormGroup.pristine\" color=\"primary\"\r\n                      mat-button\r\n                      type=\"button\">RESET\r\n              </button>\r\n              <button [disabled]=\"verticalAccountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\r\n                NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"verticalPasswordFormGroup\">\r\n          <form [formGroup]=\"verticalPasswordFormGroup\">\r\n            <ng-template matStepLabel>Select a Password</ng-template>\r\n\r\n            <div class=\"heading\">Select a Password</div>\r\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Please type in your password again.</mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button [disabled]=\"verticalPasswordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\r\n                NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"verticalConfirmFormGroup\">\r\n          <form [formGroup]=\"verticalConfirmFormGroup\">\r\n            <ng-template matStepLabel>Confirm Creation</ng-template>\r\n\r\n            <div class=\"heading\">You're almost there!</div>\r\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\r\n            </div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\r\n                I agree to the terms of service and the usual stuff. *\r\n              </mat-checkbox>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button (click)=\"submit()\" [disabled]=\"verticalConfirmFormGroup.invalid\" color=\"primary\" mat-raised-button\r\n                      matStepperNext>\r\n                CREATE ACCOUNT\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n        </mat-step>\r\n      </mat-vertical-stepper>\r\n    </div>\r\n  </div>\r\n\r\n</fury-page>\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const fadeInUpAnimation = trigger('fadeInUp', [\r\n  transition(':enter', [\r\n    style({\r\n      transform: 'translateY(3vh)',\r\n      opacity: 0\r\n    }),\r\n    animate('400ms cubic-bezier(0.35, 0, 0.25, 1)', style({\r\n      transform: 'translateY(0)',\r\n      opacity: 1\r\n    }))\r\n  ])\r\n]);\r\n"],"sourceRoot":"webpack:///"}