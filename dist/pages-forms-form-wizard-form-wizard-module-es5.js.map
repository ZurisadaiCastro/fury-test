{"version":3,"sources":["webpack:///src/@fury/animations/fade-in-right.animation.ts","webpack:///src/app/pages/forms/form-wizard/form-wizard.module.ts","webpack:///src/app/pages/forms/form-wizard/form-wizard-routing.module.ts","webpack:///src/app/pages/forms/form-wizard/form-wizard.component.ts","webpack:///src/app/pages/forms/form-wizard/form-wizard.component.html","webpack:///src/@fury/animations/fade-in-up.animation.ts"],"names":["fadeInRightAnimation","transform","opacity","FormWizardModule","imports","declarations","routes","path","component","FormWizardRoutingModule","forChild","exports","FormWizardComponent","fb","cd","snackbar","phonePrefixOptions","passwordInputType","accountFormGroup","group","username","required","name","email","phonePrefix","phone","passwordFormGroup","password","compose","minLength","passwordConfirm","confirmFormGroup","terms","requiredTrue","verticalAccountFormGroup","verticalPasswordFormGroup","verticalConfirmFormGroup","markForCheck","open","duration","submit","selector","templateUrl","styleUrls","animations","fadeInUpAnimation"],"mappings":"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","file":"pages-forms-form-wizard-form-wizard-module-es5.js","sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const fadeInRightAnimation = trigger('fadeInRight', [\r\n  transition(':enter', [\r\n    style({\r\n      transform: 'translateX(-2vw)',\r\n      opacity: 0\r\n    }),\r\n    animate('0.4s cubic-bezier(0.35, 0, 0.25, 1)', style({\r\n      transform: 'translateX(0)',\r\n      opacity: 1\r\n    }))\r\n  ])\r\n]);\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../../../@fury/shared/material-components.module';\r\nimport { FormWizardRoutingModule } from './form-wizard-routing.module';\r\nimport { FormWizardComponent } from './form-wizard.component';\r\nimport { FurySharedModule } from '../../../../@fury/fury-shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormWizardRoutingModule,\r\n    FurySharedModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n  ],\r\n  declarations: [FormWizardComponent]\r\n})\r\nexport class FormWizardModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormWizardComponent } from './form-wizard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FormWizardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormWizardRoutingModule {\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { fadeInRightAnimation } from '../../../../@fury/animations/fade-in-right.animation';\r\nimport { scaleInAnimation } from '../../../../@fury/animations/scale-in.animation';\r\nimport { fadeInUpAnimation } from '../../../../@fury/animations/fade-in-up.animation';\r\n\r\n@Component({\r\n  selector: 'fury-form-wizard',\r\n  templateUrl: './form-wizard.component.html',\r\n  styleUrls: ['./form-wizard.component.scss'],\r\n  animations: [fadeInUpAnimation, fadeInRightAnimation, scaleInAnimation]\r\n})\r\nexport class FormWizardComponent implements OnInit {\r\n\r\n  accountFormGroup: FormGroup;\r\n  passwordFormGroup: FormGroup;\r\n  confirmFormGroup: FormGroup;\r\n\r\n  verticalAccountFormGroup: FormGroup;\r\n  verticalPasswordFormGroup: FormGroup;\r\n  verticalConfirmFormGroup: FormGroup;\r\n\r\n  phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\r\n\r\n  passwordInputType = 'password';\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private cd: ChangeDetectorRef,\r\n              private snackbar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    /**\r\n     * Horizontal Stepper\r\n     * @type {FormGroup}\r\n     */\r\n    this.accountFormGroup = this.fb.group({\r\n      username: [null, Validators.required],\r\n      name: [null, Validators.required],\r\n      email: [null, Validators.required],\r\n      phonePrefix: [this.phonePrefixOptions[3]],\r\n      phone: [],\r\n    });\r\n\r\n    this.passwordFormGroup = this.fb.group({\r\n      password: [\r\n        null,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(6)\r\n          ]\r\n        )\r\n      ],\r\n      passwordConfirm: [null, Validators.required]\r\n    });\r\n\r\n    this.confirmFormGroup = this.fb.group({\r\n      terms: [null, Validators.requiredTrue]\r\n    });\r\n\r\n    /**\r\n     * Vertical Stepper\r\n     * @type {FormGroup}\r\n     */\r\n    this.verticalAccountFormGroup = this.fb.group({\r\n      username: [null, Validators.required],\r\n      name: [null, Validators.required],\r\n      email: [null, Validators.required],\r\n      phonePrefix: [this.phonePrefixOptions[3]],\r\n      phone: [],\r\n    });\r\n\r\n    this.verticalPasswordFormGroup = this.fb.group({\r\n      password: [\r\n        null,\r\n        Validators.compose(\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(6)\r\n          ]\r\n        )\r\n      ],\r\n      passwordConfirm: [null, Validators.required]\r\n    });\r\n\r\n    this.verticalConfirmFormGroup = this.fb.group({\r\n      terms: [null, Validators.requiredTrue]\r\n    });\r\n  }\r\n\r\n  showPassword() {\r\n    this.passwordInputType = 'text';\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  hidePassword() {\r\n    this.passwordInputType = 'password';\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  submit() {\r\n    this.snackbar.open('Hooray! You successfully created your account.', null, {\r\n      duration: 5000\r\n    });\r\n  }\r\n}\r\n","<fury-page>\r\n  <fury-title class=\"title\">\r\n    <mat-icon [@scaleIn]>description</mat-icon>\r\n    <span [@fadeInRight]>Form Wizard</span>\r\n  </fury-title>\r\n\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n\r\n    <div [@fadeInUp] class=\"card\">\r\n      <mat-horizontal-stepper #stepper=\"matHorizontalStepper\" [linear]=\"true\">\r\n        <mat-step [stepControl]=\"accountFormGroup\">\r\n          <form [formGroup]=\"accountFormGroup\">\r\n            <ng-template matStepLabel>Create Account</ng-template>\r\n\r\n            <div class=\"heading\">Create Account</div>\r\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Account Username</mat-label>\r\n                <input formControlName=\"username\" matInput required>\r\n                <mat-hint>This will be your unique login name.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Name</mat-label>\r\n                <input formControlName=\"name\" matInput required>\r\n                <mat-hint>How may we call you?</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\r\n                <mat-form-field fxFlex=\"auto\">\r\n                  <mat-label>E-Mail</mat-label>\r\n                  <input formControlName=\"email\" matInput required>\r\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\r\n                  <mat-form-field fxFlex=\"1 1 auto\">\r\n                    <mat-label>Code</mat-label>\r\n                    <mat-select formControlName=\"phonePrefix\">\r\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <mat-form-field fxFlex=\"2 1 auto\">\r\n                    <mat-label>Phone Number</mat-label>\r\n                    <input formControlName=\"phone\" matInput>\r\n                    <mat-hint align=\"end\"></mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button (click)=\"stepper.reset()\" [disabled]=\"accountFormGroup.pristine\" color=\"primary\" mat-button\r\n                      type=\"button\">RESET\r\n              </button>\r\n              <button [disabled]=\"accountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"passwordFormGroup\">\r\n          <form [formGroup]=\"passwordFormGroup\">\r\n            <ng-template matStepLabel>Select a Password</ng-template>\r\n\r\n            <div class=\"heading\">Select a Password</div>\r\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Please type in your password again.</mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button [disabled]=\"passwordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"confirmFormGroup\">\r\n          <form [formGroup]=\"confirmFormGroup\">\r\n            <ng-template matStepLabel>Confirm Creation</ng-template>\r\n\r\n            <div class=\"heading\">You're almost there!</div>\r\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\r\n            </div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\r\n                I agree to the terms of service and the usual stuff. *\r\n              </mat-checkbox>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button (click)=\"submit()\" [disabled]=\"confirmFormGroup.invalid\" color=\"primary\" mat-raised-button\r\n                      matStepperNext>\r\n                CREATE ACCOUNT\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n        </mat-step>\r\n      </mat-horizontal-stepper>\r\n    </div>\r\n\r\n    <div [@fadeInUp] class=\"card\">\r\n      <mat-vertical-stepper #verticalStepper=\"matVerticalStepper\" [linear]=\"true\">\r\n        <mat-step [stepControl]=\"verticalAccountFormGroup\">\r\n          <form [formGroup]=\"verticalAccountFormGroup\">\r\n            <ng-template matStepLabel>Create Account</ng-template>\r\n\r\n            <div class=\"heading\">Create Account</div>\r\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Account Username</mat-label>\r\n                <input formControlName=\"username\" matInput required>\r\n                <mat-hint>This will be your unique login name.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Name</mat-label>\r\n                <input formControlName=\"name\" matInput required>\r\n                <mat-hint>How may we call you?</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\r\n                <mat-form-field fxFlex=\"auto\">\r\n                  <mat-label>E-Mail</mat-label>\r\n                  <input formControlName=\"email\" matInput required>\r\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\r\n                  <mat-form-field fxFlex=\"1 1 auto\">\r\n                    <mat-label>Code</mat-label>\r\n                    <mat-select formControlName=\"phonePrefix\">\r\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <mat-form-field fxFlex=\"2 1 auto\">\r\n                    <mat-label>Phone Number</mat-label>\r\n                    <input formControlName=\"phone\" matInput>\r\n                    <mat-hint align=\"end\"></mat-hint>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button (click)=\"verticalStepper.reset()\" [disabled]=\"verticalAccountFormGroup.pristine\" color=\"primary\"\r\n                      mat-button\r\n                      type=\"button\">RESET\r\n              </button>\r\n              <button [disabled]=\"verticalAccountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\r\n                NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"verticalPasswordFormGroup\">\r\n          <form [formGroup]=\"verticalPasswordFormGroup\">\r\n            <ng-template matStepLabel>Select a Password</ng-template>\r\n\r\n            <div class=\"heading\">Select a Password</div>\r\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\r\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility</mat-icon>\r\n                </button>\r\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\r\n                        type=\"button\">\r\n                  <mat-icon>visibility_off</mat-icon>\r\n                </button>\r\n                <mat-hint>Please type in your password again.</mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button [disabled]=\"verticalPasswordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\r\n                NEXT\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"verticalConfirmFormGroup\">\r\n          <form [formGroup]=\"verticalConfirmFormGroup\">\r\n            <ng-template matStepLabel>Confirm Creation</ng-template>\r\n\r\n            <div class=\"heading\">You're almost there!</div>\r\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\r\n            </div>\r\n\r\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\r\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\r\n                I agree to the terms of service and the usual stuff. *\r\n              </mat-checkbox>\r\n            </div>\r\n\r\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\r\n              <button (click)=\"submit()\" [disabled]=\"verticalConfirmFormGroup.invalid\" color=\"primary\" mat-raised-button\r\n                      matStepperNext>\r\n                CREATE ACCOUNT\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n        </mat-step>\r\n      </mat-vertical-stepper>\r\n    </div>\r\n  </div>\r\n\r\n</fury-page>\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const fadeInUpAnimation = trigger('fadeInUp', [\r\n  transition(':enter', [\r\n    style({\r\n      transform: 'translateY(3vh)',\r\n      opacity: 0\r\n    }),\r\n    animate('400ms cubic-bezier(0.35, 0, 0.25, 1)', style({\r\n      transform: 'translateY(0)',\r\n      opacity: 1\r\n    }))\r\n  ])\r\n]);\r\n"]}