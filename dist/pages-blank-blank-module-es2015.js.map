{"version":3,"sources":["./node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js","./node_modules/mat-file-upload/fesm2015/mat-file-upload.js","./node_modules/@angular-material-components/file-input/__ivy_ngcc__/fesm2015/angular-material-components-file-input.js","./src/app/pages/blank/blank-routing.module.ts","./src/app/pages/blank/blank.module.ts","./src/app/pages/blank/BlankComponent.ts","./src/app/pages/blank/blank.component.html","./node_modules/angular-file-uploader/__ivy_ngcc__/fesm2015/angular-file-uploader.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2G;AAC5D;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,sDAAsD;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAoDV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EAKV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAuCV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,4EAA4E,WAAW;AACvF,uDAAuD,WAAW;AAClE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,yBAAyB,EAAE;AAC3B;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAwBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,kCAAkC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E;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,iBAAiB;AAC/B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,mBAAmB,+BAA+B;AAClD;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,8DAAe,GAAG,+DAA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;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEmI;;AAEnI,kE;;;;;;;;;;;;ACnxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACL;AACgB;AACf;AACmB;AACU;AACrB;AACN;AACE;AACD;AACG;;;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAc;KAC1B;CACF,CAAC;AAkBK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAfpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YACrC,+EAAyB;YACzB,gEAAgB;YAChB,mFAAoB;YACpB,6FAAqB;YACrB,wEAAe;YACf,kEAAmB;YACnB,oEAAa;YACb,oEAAmB;YACnB,uEAAc;SACf,EAGS,4DAAY;mIAEX,kBAAkB,4EAd3B,+EAAyB;QACzB,gEAAgB;QAChB,mFAAoB;QACpB,6FAAqB;QACrB,wEAAe;QACf,kEAAmB;QACnB,oEAAa;QACb,oEAAmB;QACnB,uEAAc,aAIN,4DAAY;6FAEX,kBAAkB;cAhB9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;oBACrC,+EAAyB;oBACzB,gEAAgB;oBAChB,mFAAoB;oBACpB,6FAAqB;oBACrB,wEAAe;oBACf,kEAAmB;oBACnB,oEAAa;oBACb,oEAAmB;oBACnB,uEAAc;iBACf;gBAGD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACtB;;;;;;;;;;;;;;ACnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEa;AACV;AACmB;AACC;AACnB;AACQ;AACN;AACG;AACqB;AACf;AACL;;AAwBlD,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAlBb;YACP,4DAAY;YACZ,wEAAkB;YAClB,yEAAgB;YAChB,mFAAoB;YACpB,gEAAgB;YAChB,wEAAe;YACf,kEAAmB;YACnB,qEAAgB;YAChB,kEAAmB;YACnB,0FAAc;YACd,8EAAiB;YACjB,uEAAc;SACf;mIAKU,WAAW,mBAHP,8DAAc,aAd3B,4DAAY;QACZ,wEAAkB;QAClB,yEAAgB;QAChB,mFAAoB;QACpB,gEAAgB;QAChB,wEAAe;QACf,kEAAmB;QACnB,qEAAgB;QAChB,kEAAmB;QACnB,0FAAc;QACd,8EAAiB;QACjB,uEAAc;6FAML,WAAW;cAnBvB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAkB;oBAClB,yEAAgB;oBAChB,mFAAoB;oBACpB,gEAAgB;oBAChB,wEAAe;oBACf,kEAAmB;oBACnB,qEAAgB;oBAChB,kEAAmB;oBACnB,0FAAc;oBACd,8EAAiB;oBACjB,uEAAc;iBACf;gBAED,YAAY,EAAE,CAAC,8DAAc,CAAC;aAE/B;;;;;;;;;;;;;;;;;;;;ACpCiD;AACH;;AAG/C,MAAM,GAAG,GAAG,mDAAmD,CAAC;AAMzD,MAAM,cAAc;IAQzB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAY,CAAC;YAC/B,GAAG,EAAE,GAAG;YACR,gBAAgB,EAAE,IAAI;YACtB,yBAAyB,EAAE,IAAI;YAC/B,kBAAkB,EAAE,CAAO,IAAI,EAAE,EAAE,CAAC;gBAClC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;oBACrC,OAAO,CAAC;wBACN,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;wBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;wBACvB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;wBAC5B,IAAI,EAAE,IAAI,IAAI,EAAE;qBACjB,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QAEpC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;IAC/D,CAAC;IAEM,YAAY,CAAC,CAAM;QACxB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEM,eAAe,CAAC,CAAM;QAC3B,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ;IACR,CAAC;;4EA1CU,cAAc;8FAAd,cAAc,oECHf,mIAAuD;QAAnE,qEAGA;QAAA,yEACE;QAAA,yEACE;QAAA,uEAA6B;QAAA,6EAAkB;QAAA,4DAAI;QACrD,4DAAM;QACR,4DAAM;QAGN,iEAEM;;6FDTO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AACR;AACpC;;AAEP;AACO;AACL;;AAE1C,qEAAqE;AACrE,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,iGAAiG,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,IAAI,6BAA6B,EAAE,0GAA0G,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,IAAI,kCAAkC,EAAE;AAC7a,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,uEAAuE;AACvE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,uEAAuE;AACvE,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,yGAAyG,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,IAAI,iCAAiC,EAAE;AACtO,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,CAAC;AACD,wEAAwE;AACxE,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,mGAAmG,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,IAAI,kCAAkC,EAAE;AACjO,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,oEAAoE;AACpE,IAAI,uDAAgB;AACpB,CAAC;AACD,2BAA2B,SAAS,eAAe;AACnD,2EAA2E;AAC3E,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,yEAAyE;AACzE,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,+FAA+F,CAAC,2DAAoB,OAAO,eAAe,2DAAoB,SAAS,iBAAiB,2DAAoB,IAAI,wCAAwC,EAAE;AAC/Q,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,CAAC;AACD,qEAAqE;AACrE,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,yEAAyE;AACzE,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,+FAA+F,CAAC,2DAAoB,OAAO,eAAe,2DAAoB,SAAS,iBAAiB,2DAAoB,IAAI,wCAAwC,EAAE;AAC/Q,IAAI,oDAAa;AACjB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,CAAC;AACD,qEAAqE;AACrE,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,oEAAoE;AACpE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,sEAAsE;AACtE,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,uDAAgB;AACpB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,CAAC;AACD,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,+DAA+D;AAC/D,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,2FAA2F,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,8BAA8B,EAAE;AACpN,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,+DAA+D;AAC/D,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,qFAAqF,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,mCAAmC,EAAE;AACnN,IAAI,oDAAa;AACjB,IAAI,uDAAgB;AACpB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,iGAAiG,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,iCAAiC,EAAE;AAC7N,IAAI,0DAAmB;AACvB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,IAAI,oDAAa;AACjB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,IAAI,uDAAgB;AACpB,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,oEAA6B;AACjC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,0DAA0D;AACzI;AACA;AACA,+BAA+B,kEAAa;AAC5C,6CAA6C;AAC7C;AACA;AACA;AACA,oCAAoC,kEAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"pages-blank-blank-module-es2015.js","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileSelectDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileDropDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FileUploadModule });\nFileUploadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n//# sourceMappingURL=ng2-file-upload.js.map","import { ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, ɵɵgetCurrentView, ɵɵelementStart, ɵɵlistener, ɵɵrestoreView, ɵɵnextContext, ɵɵtext, ɵɵelementEnd, ɵɵproperty, ɵɵattribute, ɵɵadvance, ɵɵtextInterpolate1, ɵɵelement, ɵɵtemplate, EventEmitter, ɵɵdefineComponent, ɵɵviewQuery, ɵɵqueryRefresh, ɵɵloadQuery, ɵɵreference, ɵɵtextInterpolate, Component, Input, Output, ViewChild, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { NgIf, CommonModule } from '@angular/common';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\n\nclass MatFileUploadService {\n    constructor() { }\n}\nMatFileUploadService.ɵfac = function MatFileUploadService_Factory(t) { return new (t || MatFileUploadService)(); };\nMatFileUploadService.ɵprov = ɵɵdefineInjectable({ token: MatFileUploadService, factory: MatFileUploadService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MatFileUploadService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\nconst _c0 = [\"fileInput\"];\nfunction MatFileUploadComponent_button_7_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵɵgetCurrentView();\n    ɵɵelementStart(0, \"button\", 6);\n    ɵɵlistener(\"click\", function MatFileUploadComponent_button_7_Template_button_click_0_listener() { ɵɵrestoreView(_r4); const ctx_r3 = ɵɵnextContext(); return ctx_r3.uploadFiles(); });\n    ɵɵtext(1);\n    ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵɵnextContext();\n    ɵɵproperty(\"type\", ctx_r1.uploadButtonType)(\"disabled\", !ctx_r1.selectedFiles);\n    ɵɵattribute(\"aria-label\", ctx_r1.uploadButtonText);\n    ɵɵadvance(1);\n    ɵɵtextInterpolate1(\" \", ctx_r1.uploadButtonText, \" \");\n} }\nfunction MatFileUploadComponent_button_10_mat_icon_1_Template(rf, ctx) { if (rf & 1) {\n    ɵɵelementStart(0, \"mat-icon\");\n    ɵɵtext(1, \"close\");\n    ɵɵelementEnd();\n} }\nfunction MatFileUploadComponent_button_10_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵɵelement(0, \"mat-icon\", 10);\n} if (rf & 2) {\n    const ctx_r6 = ɵɵnextContext(2);\n    ɵɵproperty(\"svgIcon\", ctx_r6.customSvgIcon);\n} }\nfunction MatFileUploadComponent_button_10_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵɵgetCurrentView();\n    ɵɵelementStart(0, \"button\", 7);\n    ɵɵlistener(\"click\", function MatFileUploadComponent_button_10_Template_button_click_0_listener() { ɵɵrestoreView(_r8); const ctx_r7 = ɵɵnextContext(); return ctx_r7.filesChanged(null); });\n    ɵɵtemplate(1, MatFileUploadComponent_button_10_mat_icon_1_Template, 2, 0, \"mat-icon\", 8);\n    ɵɵtemplate(2, MatFileUploadComponent_button_10_mat_icon_2_Template, 1, 1, \"mat-icon\", 9);\n    ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵɵnextContext();\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", !ctx_r2.customSvgIcon);\n    ɵɵadvance(1);\n    ɵɵproperty(\"ngIf\", ctx_r2.customSvgIcon);\n} }\nclass MatFileUploadComponent {\n    constructor() {\n        this.labelText = 'Select File(s)';\n        this.selectButtonText = 'Select File(s)';\n        this.selectFilesButtonType = 'button';\n        this.uploadButtonText = 'Upload File(s)';\n        this.uploadButtonType = 'button';\n        this.allowMultipleFiles = false;\n        this.showUploadButton = true;\n        this.acceptedTypes = '*.*';\n        this.customSvgIcon = null;\n        this.uploadClicked = new EventEmitter();\n        this.selectedFilesChanged = new EventEmitter();\n        this.selectedFileText = '';\n    }\n    filesChanged(files) {\n        this.selectedFiles = files;\n        this.selectedFilesChanged.emit(this.selectedFiles);\n        if (this.selectedFiles) {\n            const numSelectedFiles = this.selectedFiles.length;\n            this.selectedFileText =\n                numSelectedFiles === 1\n                    ? this.selectedFiles[0].name\n                    : `${numSelectedFiles} files selected`;\n        }\n        else {\n            this.selectedFileText = '';\n            this.resetFileInput();\n        }\n    }\n    uploadFiles() {\n        this.uploadClicked.emit(this.selectedFiles);\n        this.resetFileInput();\n    }\n    resetFileInput() {\n        this.fileInputRef.nativeElement.value = '';\n    }\n}\nMatFileUploadComponent.ɵfac = function MatFileUploadComponent_Factory(t) { return new (t || MatFileUploadComponent)(); };\nMatFileUploadComponent.ɵcmp = ɵɵdefineComponent({ type: MatFileUploadComponent, selectors: [[\"mat-file-upload\"]], viewQuery: function MatFileUploadComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.fileInputRef = _t.first);\n    } }, inputs: { labelText: \"labelText\", selectButtonText: \"selectButtonText\", selectFilesButtonType: \"selectFilesButtonType\", uploadButtonText: \"uploadButtonText\", uploadButtonType: \"uploadButtonType\", allowMultipleFiles: \"allowMultipleFiles\", showUploadButton: \"showUploadButton\", acceptedTypes: \"acceptedTypes\", customSvgIcon: \"customSvgIcon\" }, outputs: { uploadClicked: \"uploadClicked\", selectedFilesChanged: \"selectedFilesChanged\" }, decls: 11, vars: 9, consts: [[1, \"file-input-text\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"file-input-button\", 3, \"type\", \"click\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"accept\", \"multiple\", \"change\"], [\"fileInput\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"class\", \"file-input-button\", 3, \"type\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-label\", \"Remove Selected File(s)\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"file-input-button\", 3, \"type\", \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"aria-label\", \"Remove Selected File(s)\", 3, \"click\"], [4, \"ngIf\"], [3, \"svgIcon\", 4, \"ngIf\"], [3, \"svgIcon\"]], template: function MatFileUploadComponent_Template(rf, ctx) { if (rf & 1) {\n        const _r9 = ɵɵgetCurrentView();\n        ɵɵelementStart(0, \"span\", 0);\n        ɵɵtext(1);\n        ɵɵelementEnd();\n        ɵɵelementStart(2, \"button\", 1);\n        ɵɵlistener(\"click\", function MatFileUploadComponent_Template_button_click_2_listener() { ɵɵrestoreView(_r9); const _r0 = ɵɵreference(6); return _r0.click(); });\n        ɵɵelementStart(3, \"span\");\n        ɵɵtext(4);\n        ɵɵelementEnd();\n        ɵɵelementStart(5, \"input\", 2, 3);\n        ɵɵlistener(\"change\", function MatFileUploadComponent_Template_input_change_5_listener($event) { return ctx.filesChanged($event.target.files); });\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n        ɵɵtemplate(7, MatFileUploadComponent_button_7_Template, 2, 4, \"button\", 4);\n        ɵɵelementStart(8, \"span\", 0);\n        ɵɵtext(9);\n        ɵɵelementEnd();\n        ɵɵtemplate(10, MatFileUploadComponent_button_10_Template, 3, 2, \"button\", 5);\n    } if (rf & 2) {\n        ɵɵadvance(1);\n        ɵɵtextInterpolate(ctx.labelText);\n        ɵɵadvance(1);\n        ɵɵproperty(\"type\", ctx.selectFilesButtonType);\n        ɵɵattribute(\"aria-label\", ctx.selectButtonText);\n        ɵɵadvance(2);\n        ɵɵtextInterpolate(ctx.selectButtonText);\n        ɵɵadvance(1);\n        ɵɵproperty(\"accept\", ctx.acceptedTypes)(\"multiple\", ctx.allowMultipleFiles);\n        ɵɵadvance(2);\n        ɵɵproperty(\"ngIf\", ctx.showUploadButton);\n        ɵɵadvance(2);\n        ɵɵtextInterpolate(ctx.selectedFileText);\n        ɵɵadvance(1);\n        ɵɵproperty(\"ngIf\", ctx.selectedFiles != null && ctx.selectedFiles.length > 0);\n    } }, directives: [MatButton, NgIf, MatIcon], styles: [\".file-input-button[_ngcontent-%COMP%] { margin-right: 8px !important }\", \".file-input-text[_ngcontent-%COMP%] { font-size: 14px !important; margin-right: 8px !important }\"] });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MatFileUploadComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-file-upload',\n                template: `\r\n    <span class=\"file-input-text\">{{ labelText }}</span>\r\n    <button\r\n      mat-button\r\n      [type]=\"selectFilesButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      (click)=\"fileInput.click()\"\r\n      [attr.aria-label]=\"selectButtonText\"\r\n    >\r\n      <span>{{ selectButtonText }}</span>\r\n      <input\r\n        #fileInput\r\n        type=\"file\"\r\n        style=\"display: none\"\r\n        [accept]=\"acceptedTypes\"\r\n        [multiple]=\"allowMultipleFiles\"\r\n        (change)=\"filesChanged($event.target.files)\"\r\n      />\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      [type]=\"uploadButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      [disabled]=\"!selectedFiles\"\r\n      (click)=\"uploadFiles()\"\r\n      *ngIf=\"showUploadButton\"\r\n      [attr.aria-label]=\"uploadButtonText\"\r\n    >\r\n      {{ uploadButtonText }}\r\n    </button>\r\n    <span class=\"file-input-text\">{{ selectedFileText }}</span>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"filesChanged(null)\"\r\n      type=\"button\"\r\n      aria-label=\"Remove Selected File(s)\"\r\n       *ngIf=\"selectedFiles != null && selectedFiles.length > 0\"\r\n    >\r\n        <mat-icon *ngIf=\"!customSvgIcon\">close</mat-icon>\r\n        <mat-icon *ngIf=\"customSvgIcon\" [svgIcon]=\"customSvgIcon\"></mat-icon>\r\n    </button>\r\n  `,\n                styles: [\n                    '.file-input-button { margin-right: 8px !important }',\n                    '.file-input-text { font-size: 14px !important; margin-right: 8px !important }',\n                ],\n            }]\n    }], null, { labelText: [{\n            type: Input\n        }], selectButtonText: [{\n            type: Input\n        }], selectFilesButtonType: [{\n            type: Input\n        }], uploadButtonText: [{\n            type: Input\n        }], uploadButtonType: [{\n            type: Input\n        }], allowMultipleFiles: [{\n            type: Input\n        }], showUploadButton: [{\n            type: Input\n        }], acceptedTypes: [{\n            type: Input\n        }], customSvgIcon: [{\n            type: Input\n        }], uploadClicked: [{\n            type: Output\n        }], selectedFilesChanged: [{\n            type: Output\n        }], fileInputRef: [{\n            type: ViewChild,\n            args: ['fileInput']\n        }] }); })();\n\nclass MatFileUploadModule {\n}\nMatFileUploadModule.ɵmod = ɵɵdefineNgModule({ type: MatFileUploadModule });\nMatFileUploadModule.ɵinj = ɵɵdefineInjector({ factory: function MatFileUploadModule_Factory(t) { return new (t || MatFileUploadModule)(); }, imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatIconModule,\n            MatInputModule,\n            MatSelectModule,\n            FormsModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(MatFileUploadModule, { declarations: [MatFileUploadComponent], imports: [CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        FormsModule], exports: [MatFileUploadComponent] }); })();\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MatFileUploadModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatFileUploadComponent],\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatIconModule,\n                    MatInputModule,\n                    MatSelectModule,\n                    FormsModule,\n                ],\n                exports: [MatFileUploadComponent],\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of mat-file-upload\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatFileUploadComponent, MatFileUploadModule, MatFileUploadService };\n//# sourceMappingURL=mat-file-upload.js.map\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directive, Component, ViewEncapsulation, forwardRef, ElementRef, ChangeDetectorRef, Optional, Self, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/file-input.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from '@angular/material/icon';\n\nconst _c0 = [\"inputFile\"];\nconst _c1 = [\"inputValue\"];\nfunction NgxMatFileInputComponent_mat_icon_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\", 7);\n    ɵngcc0.ɵɵtext(1, \"attach_file\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c2 = [[[\"\", \"ngxMatFileInputIcon\", \"\"]]];\nconst _c3 = [\"[ngxMatFileInputIcon]\"];\nlet nextUniqueId = 0;\r\nclass NgxMatInputBase {\r\n    /**\r\n     * @param {?} _defaultErrorStateMatcher\r\n     * @param {?} _parentForm\r\n     * @param {?} _parentFormGroup\r\n     * @param {?} ngControl\r\n     */\r\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\r\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\r\n        this._parentForm = _parentForm;\r\n        this._parentFormGroup = _parentFormGroup;\r\n        this.ngControl = ngControl;\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    NgxMatInputBase.prototype._defaultErrorStateMatcher;\r\n    /** @type {?} */\r\n    NgxMatInputBase.prototype._parentForm;\r\n    /** @type {?} */\r\n    NgxMatInputBase.prototype._parentFormGroup;\r\n    /**\r\n     * \\@docs-private\r\n     * @type {?}\r\n     */\r\n    NgxMatInputBase.prototype.ngControl;\r\n}\r\n/** @type {?} */\r\nconst _NgxMatInputMixinBase = mixinErrorState(NgxMatInputBase);\r\nclass NgxMatFileInputIcon {\r\n}\nNgxMatFileInputIcon.ɵfac = function NgxMatFileInputIcon_Factory(t) { return new (t || NgxMatFileInputIcon)(); };\nNgxMatFileInputIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxMatFileInputIcon, selectors: [[\"\", \"ngxMatFileInputIcon\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxMatFileInputIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxMatFileInputIcon]'\n            }]\n    }], null, null); })();\r\nclass NgxMatFileInputComponent extends _NgxMatInputMixinBase {\r\n    /**\r\n     * @param {?} _elementRef\r\n     * @param {?} _platform\r\n     * @param {?} _cd\r\n     * @param {?} ngControl\r\n     * @param {?} _parentForm\r\n     * @param {?} _parentFormGroup\r\n     * @param {?} _defaultErrorStateMatcher\r\n     */\r\n    constructor(_elementRef, _platform, _cd, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher) {\r\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n        this._elementRef = _elementRef;\r\n        this._platform = _platform;\r\n        this._cd = _cd;\r\n        this.ngControl = ngControl;\r\n        this.color = 'primary';\r\n        this.fileNames = null;\r\n        this._uid = `ngx-mat-fileinput-${nextUniqueId++}`;\r\n        this.stateChanges = new Subject();\r\n        this.focused = false;\r\n        this.controlType = 'ngx-mat-file-input';\r\n        this.autofilled = false;\r\n        /**\r\n         * Function when touched\r\n         */\r\n        this._onTouched = (/**\r\n         * @return {?}\r\n         */\r\n        () => { });\r\n        /**\r\n         * Function when changed\r\n         */\r\n        this._onChange = (/**\r\n         * @return {?}\r\n         */\r\n        () => { });\r\n        this._disabled = false;\r\n        this._multiple = false;\r\n        this.placeholder = 'Choose a file';\r\n        this.separator = ',';\r\n        this._required = false;\r\n        this._readonly = true;\r\n        this.id = this.id;\r\n        if (this.ngControl) {\r\n            this.ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get disabled() {\r\n        if (this.ngControl && this.ngControl.disabled !== null) {\r\n            return this.ngControl.disabled;\r\n        }\r\n        return this._disabled;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        if (this.focused) {\r\n            this.focused = false;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get id() { return this._id; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set id(value) { this._id = value || this._uid; }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get multiple() { return this._multiple; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set multiple(value) {\r\n        this._multiple = coerceBooleanProperty(value);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get required() { return this._required; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set required(value) { this._required = coerceBooleanProperty(value); }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get value() { return this._value; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get readonly() { return this._readonly; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\r\n    /**\r\n     * Limiting accepted file types\r\n     * Example: accept=\"image/png, image/jpeg\" or accept=\".png, .jpg, .jpeg\" — Accept PNG or JPEG files.\r\n     * @return {?}\r\n     */\r\n    get accept() { return this._accept; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set accept(value) {\r\n        this._accept = value;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnChanges() {\r\n        this.stateChanges.next();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.stateChanges.complete();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngDoCheck() {\r\n        if (this.ngControl) {\r\n            this.updateErrorState();\r\n        }\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    writeValue(value) {\r\n        this._updateInputValue(value);\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.stateChanges.next();\r\n    }\r\n    /**\r\n     * Focuses the input.\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    focus(options) {\r\n        this._inputValueRef.nativeElement.focus(options);\r\n    }\r\n    /**\r\n     * @param {?} isFocused\r\n     * @return {?}\r\n     */\r\n    _focusChanged(isFocused) {\r\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\r\n            this.focused = isFocused;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    /**\r\n     * Mark the field as touched\r\n     * @return {?}\r\n     */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._cd.markForCheck();\r\n        this.stateChanges.next();\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    _isBadInput() {\r\n        /** @type {?} */\r\n        let validity = ((/** @type {?} */ (this._inputValueRef.nativeElement))).validity;\r\n        return validity && validity.badInput;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get empty() {\r\n        return !this._inputValueRef.nativeElement.value && !this._isBadInput() &&\r\n            !this.autofilled;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty;\r\n    }\r\n    /**\r\n     * @param {?} ids\r\n     * @return {?}\r\n     */\r\n    setDescribedByIds(ids) {\r\n        this._ariaDescribedby = ids.join(' ');\r\n    }\r\n    /**\r\n     * @param {?=} event\r\n     * @return {?}\r\n     */\r\n    openFilePicker(event) {\r\n        this._inputFileRef.nativeElement.click();\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        this._markAsTouched();\r\n    }\r\n    /**\r\n     * @param {?} filelist\r\n     * @return {?}\r\n     */\r\n    handleFiles(filelist) {\r\n        if (filelist.length > 0) {\r\n            /** @type {?} */\r\n            const files = new Array();\r\n            for (let i = 0; i < filelist.length; i++) {\r\n                files.push(filelist.item(i));\r\n            }\r\n            this._updateInputValue(files);\r\n            this._resetInputFile();\r\n            this._onChange(this.multiple ? files : files[0]);\r\n        }\r\n    }\r\n    /**\r\n     * Handles a click on the control's container.\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onContainerClick(event) { }\r\n    ;\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    _resetInputFile() {\r\n        this._inputFileRef.nativeElement.value = \"\";\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} files\r\n     * @return {?}\r\n     */\r\n    _updateInputValue(files) {\r\n        /** @type {?} */\r\n        let text = null;\r\n        if (files) {\r\n            if (Array.isArray(files)) {\r\n                text = this._multiple\r\n                    ? files.map((/**\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */\r\n                    x => x.name)).join(this.separator)\r\n                    : files[0].name;\r\n            }\r\n            else {\r\n                text = files.name != null ? files.name : null;\r\n            }\r\n        }\r\n        this._inputValueRef.nativeElement.value = text;\r\n    }\r\n}\nNgxMatFileInputComponent.ɵfac = function NgxMatFileInputComponent_Factory(t) { return new (t || NgxMatFileInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher)); };\nNgxMatFileInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxMatFileInputComponent, selectors: [[\"ngx-mat-file-input\"]], contentQueries: function NgxMatFileInputComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxMatFileInputIcon, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function NgxMatFileInputComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputFileRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputValueRef = _t.first);\n    } }, hostAttrs: [1, \"ngx-mat-file-input\"], inputs: { color: \"color\", placeholder: \"placeholder\", separator: \"separator\", id: \"id\", disabled: \"disabled\", multiple: \"multiple\", required: \"required\", value: \"value\", readonly: \"readonly\", accept: \"accept\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"ngx-mat-file-input\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: forwardRef(( /**\n                     * @return {?}\n                     */() => NgxMatFileInputComponent)) }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 8, vars: 13, consts: [[\"autocomplete\", \"off\", 1, \"mat-input-element\", \"mat-form-field-autofill-control\", 3, \"disabled\", \"required\"], [\"inputValue\", \"\"], [1, \"mat-form-field-suffix\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"type\", \"button\", 1, \"button-browse\", 3, \"color\", \"disabled\", \"click\"], [\"class\", \"ngx-mat-file-input--default-icon\", 4, \"ngIf\"], [\"type\", \"file\", 1, \"input-file\", 3, \"multiple\", \"accept\", \"change\"], [\"inputFile\", \"\"], [1, \"ngx-mat-file-input--default-icon\"]], template: function NgxMatFileInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelement(0, \"input\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function NgxMatFileInputComponent_Template_button_click_3_listener($event) { return ctx.openFilePicker($event); });\n        ɵngcc0.ɵɵtemplate(4, NgxMatFileInputComponent_mat_icon_4_Template, 2, 0, \"mat-icon\", 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function NgxMatFileInputComponent_Template_input_change_6_listener($event) { return ctx.handleFiles($event.target.files); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"multiple\", ctx.multiple)(\"accept\", ctx.accept);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.MatSuffix, ɵngcc6.NgIf, ɵngcc7.MatIcon], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;height:1.5em;width:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{align-items:center;display:flex;height:18px;line-height:18px}.ngx-mat-file-input .input-file{display:block;height:0;visibility:hidden;width:0}\"], encapsulation: 2 });\r\n/** @nocollapse */\r\nNgxMatFileInputComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Platform },\r\n    { type: ChangeDetectorRef },\r\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\r\n    { type: NgForm, decorators: [{ type: Optional }] },\r\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\r\n    { type: ErrorStateMatcher }\r\n];\r\nNgxMatFileInputComponent.propDecorators = {\r\n    _inputFileRef: [{ type: ViewChild, args: ['inputFile', { static: true },] }],\r\n    _inputValueRef: [{ type: ViewChild, args: ['inputValue', { static: true },] }],\r\n    _customIcon: [{ type: ContentChild, args: [NgxMatFileInputIcon,] }],\r\n    color: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    id: [{ type: Input }],\r\n    multiple: [{ type: Input }],\r\n    placeholder: [{ type: Input }],\r\n    separator: [{ type: Input }],\r\n    required: [{ type: Input }],\r\n    errorStateMatcher: [{ type: Input }],\r\n    value: [{ type: Input }],\r\n    readonly: [{ type: Input }],\r\n    accept: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxMatFileInputComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-mat-file-input',\n                template: \"<input #inputValue autocomplete=\\\"off\\\" class=\\\"mat-input-element mat-form-field-autofill-control\\\" [attr.id]='id'\\r\\n  [attr.placeholder]='placeholder' [disabled]='disabled' [required]='required' [attr.readonly]='readonly || null'\\r\\n  [attr.aria-describedby]='_ariaDescribedby || null' [attr.aria-invalid]='errorState'\\r\\n  [attr.aria-required]='required.toString()'>\\r\\n<div class=\\\"mat-form-field-suffix\\\">\\r\\n  <button matSuffix mat-icon-button [color]=\\\"color\\\" class=\\\"button-browse\\\"  (click)=\\\"openFilePicker($event)\\\" type=\\\"button\\\"\\r\\n   [disabled]=\\\"disabled\\\">\\r\\n    <mat-icon *ngIf=\\\"!_customIcon\\\" class=\\\"ngx-mat-file-input--default-icon\\\">attach_file</mat-icon>\\r\\n    <ng-content select=\\\"[ngxMatFileInputIcon]\\\"></ng-content>\\r\\n  </button>\\r\\n</div>\\r\\n<input type=\\\"file\\\" #inputFile (change)=\\\"handleFiles($event.target.files)\\\" class=\\\"input-file\\\"\\r\\n  [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\">\",\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'class': 'ngx-mat-file-input'\n                },\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: forwardRef(( /**\n                             * @return {?}\n                             */() => NgxMatFileInputComponent)) }\n                ],\n                exportAs: 'ngx-mat-file-input',\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;height:1.5em;width:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{align-items:center;display:flex;height:18px;line-height:18px}.ngx-mat-file-input .input-file{display:block;height:0;visibility:hidden;width:0}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }]; }, { color: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], separator: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], accept: [{\n            type: Input\n        }], _inputFileRef: [{\n            type: ViewChild,\n            args: ['inputFile', { static: true }]\n        }], _inputValueRef: [{\n            type: ViewChild,\n            args: ['inputValue', { static: true }]\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [NgxMatFileInputIcon]\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxMatFileInputComponent.prototype._inputFileRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxMatFileInputComponent.prototype._inputValueRef;\r\n    /**\r\n     * Custom icon set by the consumer.\r\n     * @type {?}\r\n     */\r\n    NgxMatFileInputComponent.prototype._customIcon;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.color;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.fileNames;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._uid;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._previousNativeValue;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype._ariaDescribedby;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.stateChanges;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.focused;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.errorState;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.controlType;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.autofilled;\r\n    /**\r\n     * Function when touched\r\n     * @type {?}\r\n     */\r\n    NgxMatFileInputComponent.prototype._onTouched;\r\n    /**\r\n     * Function when changed\r\n     * @type {?}\r\n     */\r\n    NgxMatFileInputComponent.prototype._onChange;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._disabled;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._id;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._multiple;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.placeholder;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.separator;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._required;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.errorStateMatcher;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._value;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxMatFileInputComponent.prototype._readonly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxMatFileInputComponent.prototype._accept;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._elementRef;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    NgxMatFileInputComponent.prototype._platform;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxMatFileInputComponent.prototype._cd;\r\n    /** @type {?} */\r\n    NgxMatFileInputComponent.prototype.ngControl;\r\n    /* Skipping unhandled member: ;*/\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/file-input.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxMatFileInputModule {\r\n}\nNgxMatFileInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxMatFileInputModule });\nNgxMatFileInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxMatFileInputModule_Factory(t) { return new (t || NgxMatFileInputModule)(); }, imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatIconModule,\n            MatFormFieldModule,\n            MatInputModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxMatFileInputModule, { declarations: function () { return [NgxMatFileInputComponent, NgxMatFileInputIcon]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatInputModule]; }, exports: function () { return [NgxMatFileInputComponent, NgxMatFileInputIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxMatFileInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxMatFileInputComponent,\n                    NgxMatFileInputIcon\n                ],\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatIconModule,\n                    MatFormFieldModule,\n                    MatInputModule\n                ],\n                exports: [\n                    NgxMatFileInputComponent,\n                    NgxMatFileInputIcon\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/file-input-type.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/file-input-helper.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} number\r\n * @return {?}\r\n */\r\nfunction calculFileSize(number) {\r\n    if (number < 1024) {\r\n        return number + 'bytes';\r\n    }\r\n    else if (number >= 1024 && number < 1048576) {\r\n        return (number / 1024).toFixed(1) + 'KB';\r\n    }\r\n    else if (number >= 1048576) {\r\n        return (number / 1048576).toFixed(1) + 'MB';\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/max-size.validator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Validator for size of file\r\n * @param {?} max Max of size of file (in bytes)\r\n * @return {?}\r\n */\r\nfunction MaxSizeValidator(max) {\r\n    return (/**\r\n     * @param {?} ctrl\r\n     * @return {?}\r\n     */\r\n    (ctrl) => {\r\n        max = Number(max);\r\n        if (isNaN(max)) {\r\n            throw 'MaxSizeValidator: max of size of file is invalid';\r\n        }\r\n        if (!ctrl.value)\r\n            return null;\r\n        /** @type {?} */\r\n        let files = ctrl.value;\r\n        if (!Array.isArray(ctrl.value)) {\r\n            files = [ctrl.value];\r\n        }\r\n        if (!files.length)\r\n            return null;\r\n        /** @type {?} */\r\n        const add = (/**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n        (a, b) => a + b);\r\n        /** @type {?} */\r\n        const sumSize = files.map((/**\r\n         * @param {?} x\r\n         * @return {?}\r\n         */\r\n        x => x.size)).reduce(add);\r\n        if (sumSize > max) {\r\n            return {\r\n                maxSize: true\r\n            };\r\n        }\r\n        return null;\r\n    });\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/accept.validator.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n *\r\n * @param {?} accept Allowable type of file\r\n * @return {?}\r\n */\r\nfunction AcceptValidator(accept) {\r\n    return (/**\r\n     * @param {?} ctrl\r\n     * @return {?}\r\n     */\r\n    (ctrl) => {\r\n        if (!accept) {\r\n            throw ('AcceptValidator: allowable type of file can not be empty');\r\n        }\r\n        if (ctrl.value == null)\r\n            return null;\r\n        if (!accept.includes(ctrl.value.type)) {\r\n            return {\r\n                accept: true\r\n            };\r\n        }\r\n        return null;\r\n    });\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/validators/index.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angular-material-components-file-input.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { AcceptValidator, MaxSizeValidator, NgxMatFileInputComponent, NgxMatFileInputIcon, NgxMatFileInputModule, calculFileSize };\n\n//# sourceMappingURL=angular-material-components-file-input.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BlankComponent } from \"./BlankComponent\";\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFileUploadModule } from 'mat-file-upload';\nimport { MatTableModule } from '@angular/material/table';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BlankComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes),\n    AngularFileUploaderModule, \n    FileUploadModule, \n    MatProgressBarModule,\n    NgxMatFileInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFileUploadModule,\n    MatTableModule\n  ],\n  \n  \n  exports: [RouterModule],\n  })\nexport class BlankRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlankRoutingModule } from './blank-routing.module';\nimport { BlankComponent } from \"./BlankComponent\";\nimport { FurySharedModule } from '../../../@fury/fury-shared.module';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MaterialModule } from 'src/@fury/shared/material-components.module';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BlankRoutingModule,\n    FurySharedModule,\n    MatProgressBarModule,\n    FileUploadModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    MatGridListModule,\n    MatTableModule\n  ],\n\n  declarations: [BlankComponent]\n  \n})\nexport class BlankModule {\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\n\r\n\r\nconst URL = 'https://evening-anchorage-3159.herokuapp.com/api/';\r\n@Component({\r\n  selector: 'fury-blank',\r\n  templateUrl: './blank.component.html',\r\n  styleUrls: ['./blank.component.scss']\r\n})\r\nexport class BlankComponent implements OnInit {\r\n\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver: boolean;\r\n  hasAnotherDropZoneOver: boolean;\r\n  response: string;\r\n\r\n\r\n  constructor() {\r\n    this.uploader = new FileUploader({\r\n      url: URL,\r\n      disableMultipart: true,\r\n      formatDataFunctionIsAsync: true,\r\n      formatDataFunction: async (item) => {\r\n        return new Promise((resolve, reject) => {\r\n          resolve({\r\n            name: item._file.name,\r\n            length: item._file.size,\r\n            contentType: item._file.type,\r\n            date: new Date()\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    this.hasBaseDropZoneOver = false;\r\n    this.hasAnotherDropZoneOver = false;\r\n\r\n    this.response = \"\";\r\n\r\n    this.uploader.response.subscribe(res => this.response = res);\r\n  }\r\n\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  public fileOverAnother(e: any): void {\r\n    this.hasAnotherDropZoneOver = e;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  \r\n}\r\n","<style>\n  .my-drop-zone { border: dotted 3px lightgray; }\n  .nv-file-over { border: dotted 3px red; } /* Default class applied to drop zones on over */\n  .another-file-over-class { border: dotted 3px green; }\n\n  html, body { height: 100%; }\n</style>\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n\n\n<div class=\"container\">\n  <div class=\"navbar navbar-default\">\n    <a class=\"navbar-brand\" href>Carga de Plantilla</a>\n  </div>\n</div>\n\n\n<div>\n  \n</div>\n\n\n\n  \n\n\n\n","import { EventEmitter, Component, SkipSelf, Input, Output, NgModule } from '@angular/core';\nimport { HttpEventType, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction AngularFileUploaderComponent_div_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"drop\", function AngularFileUploaderComponent_div_0_div_1_Template_div_drop_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.drop($event); })(\"dragover\", function AngularFileUploaderComponent_div_0_div_1_Template_div_dragover_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.allowDrop($event); });\n    ɵngcc0.ɵɵelementStart(3, \"p\", 16);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.hideSelectBtn && ctx_r2.hideResetBtn ? null : \"dragNDropBtmPad\");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.replaceTexts == null ? null : ctx_r2.replaceTexts.dragNDropBox);\n} }\nfunction AngularFileUploaderComponent_div_0_label_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 17);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"for\", \"sel\", ctx_r3.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.replaceTexts == null ? null : ctx_r3.replaceTexts.selectFileBtn);\n} }\nfunction AngularFileUploaderComponent_div_0_input_3_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_0_input_3_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r4.id, \"\");\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r4.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r4.multiple ? \"\" : null);\n} }\nfunction AngularFileUploaderComponent_div_0_button_4_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.resetFileUpload(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.replaceTexts == null ? null : ctx_r5.replaceTexts.resetBtn);\n} }\nfunction AngularFileUploaderComponent_div_0_br_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"br\");\n} }\nconst _c0 = function (a0) { return { \"width\": a0 }; };\nfunction AngularFileUploaderComponent_div_0_div_8_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 26);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 27);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r20.uploadPercent + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r20.uploadPercent, \"%\");\n} }\nfunction AngularFileUploaderComponent_div_0_div_8_a_9_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 28);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_8_a_9_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const i_r19 = ɵngcc0.ɵɵnextContext().index; const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.removeFile(i_r19, \"sf\"); });\n    ɵngcc0.ɵɵelement(1, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AngularFileUploaderComponent_div_0_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 21);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 22);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23);\n    ɵngcc0.ɵɵelementStart(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_div_8_Template, 3, 4, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_8_a_9_Template, 2, 0, \"a\", 25);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const sf_r18 = ctx.$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(sf_r18.name);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r7.convertSize(sf_r18.size), \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.isAllowedFileSingle && ctx_r7.progressBarShow && !ctx_r7.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.uploadStarted);\n} }\nfunction AngularFileUploaderComponent_div_0_div_9_a_9_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 33);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_9_a_9_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const j_r26 = ɵngcc0.ɵɵnextContext().index; const ctx_r28 = ɵngcc0.ɵɵnextContext(2); return ctx_r28.removeFile(j_r26, \"na\"); });\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\");\n    ɵngcc0.ɵɵelement(2, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AngularFileUploaderComponent_div_0_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 30);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 21);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23);\n    ɵngcc0.ɵɵelementStart(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"p\", 31);\n    ɵngcc0.ɵɵtext(8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_a_9_Template, 3, 0, \"a\", 32);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const na_r25 = ctx.$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(na_r25[\"fileName\"]);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", na_r25[\"fileSize\"], \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(na_r25[\"errorMsg\"]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r8.uploadStarted);\n} }\nfunction AngularFileUploaderComponent_div_0_p_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"\", ctx_r9.uploadMsgClass, \" + afu-upload-status\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.uploadMsgText);\n} }\nfunction AngularFileUploaderComponent_div_0_div_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 34);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 27);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"br\");\n    ɵngcc0.ɵɵelement(5, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r10.uploadPercent + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r10.uploadPercent, \"%\");\n} }\nfunction AngularFileUploaderComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r32 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_0_div_1_Template, 5, 2, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, AngularFileUploaderComponent_div_0_label_2_Template, 2, 2, \"label\", 4);\n    ɵngcc0.ɵɵtemplate(3, AngularFileUploaderComponent_div_0_input_3_Template, 1, 3, \"input\", 5);\n    ɵngcc0.ɵɵtemplate(4, AngularFileUploaderComponent_div_0_button_4_Template, 2, 1, \"button\", 6);\n    ɵngcc0.ɵɵtemplate(5, AngularFileUploaderComponent_div_0_br_5_Template, 1, 0, \"br\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"p\", 8);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_Template, 10, 4, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_Template, 10, 4, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(10, AngularFileUploaderComponent_div_0_p_10_Template, 2, 4, \"p\", 11);\n    ɵngcc0.ɵɵelement(11, \"p\");\n    ɵngcc0.ɵɵtemplate(12, AngularFileUploaderComponent_div_0_div_12_Template, 6, 4, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(13, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.uploadFiles(); });\n    ɵngcc0.ɵɵtext(14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(15, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.theme == \"dragNDrop\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideResetBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate3(\"(\", ctx_r0.formatsAllowed, \") \", ctx_r0.replaceTexts == null ? null : ctx_r0.replaceTexts.sizeLimit, \": \", ctx_r0.convertSize(ctx_r0.maxSize), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.allowedFiles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.notAllowedFiles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.uploadMsg);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isAllowedFileSingle && ctx_r0.progressBarShow && !ctx_r0.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r0.enableUploadBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.replaceTexts == null ? null : ctx_r0.replaceTexts.uploadBtn);\n} }\nfunction AngularFileUploaderComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 35);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 36);\n    ɵngcc0.ɵɵelementStart(2, \"a\", 37);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_1_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.attachpinOnclick(); });\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelement(4, \"i\", 38);\n    ɵngcc0.ɵɵelementStart(5, \"input\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_1_Template_input_change_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \" \\u00A0 \");\n    ɵngcc0.ɵɵelementStart(8, \"span\", 39);\n    ɵngcc0.ɵɵtext(9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.replaceTexts == null ? null : ctx_r1.replaceTexts.attachPinBtn, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r1.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r1.multiple ? \"\" : null);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"upload-file-info\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.allowedFiles[0] == null ? null : ctx_r1.allowedFiles[0].name);\n} }\nclass AngularFileUploaderComponent {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.resetUpload = false;\r\n        // Outputs\r\n        this.ApiResponse = new EventEmitter();\r\n        this.everythingDone = new EventEmitter();\r\n        this.allowedFiles = [];\r\n        this.notAllowedFiles = [];\r\n        this.Caption = [];\r\n        this.isAllowedFileSingle = true;\r\n        this.progressBarShow = false;\r\n        this.enableUploadBtn = false;\r\n        this.uploadMsg = false;\r\n        this.afterUpload = false;\r\n        this.uploadStarted = false;\r\n        this.currentUploads = [];\r\n        this.fileNameIndex = true;\r\n        this.idDate = +new Date();\r\n    }\r\n    ngOnChanges(changes) {\r\n        // Track changes in Configuration and see if user has even provided Configuration.\r\n        if (changes.config && this.config) {\r\n            // Assign User Configurations to Library Properties.\r\n            this.theme = this.config.theme || '';\r\n            this.id =\r\n                this.config.id ||\r\n                    parseInt((this.idDate / 10000).toString().split('.')[1], 10) +\r\n                        Math.floor(Math.random() * 20) * 10000;\r\n            this.hideProgressBar = this.config.hideProgressBar || false;\r\n            this.hideResetBtn = this.config.hideResetBtn || false;\r\n            this.hideSelectBtn = this.config.hideSelectBtn || false;\r\n            this.maxSize = (this.config.maxSize || 20) * 1024000; // mb to bytes.\r\n            this.uploadAPI = this.config.uploadAPI.url;\r\n            this.method = this.config.uploadAPI.method || 'POST';\r\n            this.formatsAllowed =\r\n                this.config.formatsAllowed || '.jpg,.png,.pdf,.docx,.txt,.gif,.jpeg';\r\n            this.multiple = this.config.multiple || false;\r\n            this.headers = this.config.uploadAPI.headers || {};\r\n            this.params = this.config.uploadAPI.params || {};\r\n            this.responseType = this.config.uploadAPI.responseType || null;\r\n            this.fileNameIndex = this.config.fileNameIndex === false ? false : true;\r\n            this.replaceTexts = {\r\n                selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\r\n                resetBtn: 'Reset',\r\n                uploadBtn: 'Upload',\r\n                dragNDropBox: 'Drag N Drop',\r\n                attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\r\n                afterUploadMsg_success: 'Successfully Uploaded !',\r\n                afterUploadMsg_error: 'Upload Failed !',\r\n                sizeLimit: 'Size Limit',\r\n            }; // default replaceText.\r\n            if (this.config.replaceTexts) {\r\n                // updated replaceText if user has provided any.\r\n                this.replaceTexts = Object.assign(Object.assign({}, this.replaceTexts), this.config.replaceTexts);\r\n            }\r\n        }\r\n        // Reset when resetUpload value changes from false to true.\r\n        if (changes.resetUpload) {\r\n            if (changes.resetUpload.currentValue === true) {\r\n                this.resetFileUpload();\r\n            }\r\n        }\r\n    }\r\n    // Reset following properties.\r\n    resetFileUpload() {\r\n        this.allowedFiles = [];\r\n        this.Caption = [];\r\n        this.notAllowedFiles = [];\r\n        this.uploadMsg = false;\r\n        this.enableUploadBtn = false;\r\n    }\r\n    // When user selects files.\r\n    onChange(event) {\r\n        this.notAllowedFiles = [];\r\n        const fileExtRegExp = /(?:\\.([^.]+))?$/;\r\n        let fileList;\r\n        if (this.afterUpload || !this.multiple) {\r\n            this.allowedFiles = [];\r\n            this.Caption = [];\r\n            this.afterUpload = false;\r\n        }\r\n        if (event.type === 'drop') {\r\n            fileList = event.dataTransfer.files;\r\n        }\r\n        else {\r\n            fileList = event.target.files || event.srcElement.files;\r\n        }\r\n        // 'forEach' does not exist on 'filelist' that's why this good old 'for' is used.\r\n        for (let i = 0; i < fileList.length; i++) {\r\n            const currentFileExt = fileExtRegExp\r\n                .exec(fileList[i].name)[1]\r\n                .toLowerCase(); // Get file extension.\r\n            const isFormatValid = this.formatsAllowed.includes(currentFileExt);\r\n            const isSizeValid = fileList[i].size <= this.maxSize;\r\n            // Check whether current file format and size is correct as specified in the configurations.\r\n            if (isFormatValid && isSizeValid) {\r\n                this.allowedFiles.push(fileList[i]);\r\n            }\r\n            else {\r\n                this.notAllowedFiles.push({\r\n                    fileName: fileList[i].name,\r\n                    fileSize: this.convertSize(fileList[i].size),\r\n                    errorMsg: !isFormatValid ? 'Invalid format' : 'Invalid size',\r\n                });\r\n            }\r\n        }\r\n        // If there's any allowedFiles.\r\n        if (this.allowedFiles.length > 0) {\r\n            this.enableUploadBtn = true;\r\n            // Upload the files directly if theme is attach pin (as upload btn is not there for this theme).\r\n            if (this.theme === 'attachPin') {\r\n                this.uploadFiles();\r\n            }\r\n        }\r\n        else {\r\n            this.enableUploadBtn = false;\r\n        }\r\n        this.uploadMsg = false;\r\n        this.uploadStarted = false;\r\n        this.uploadPercent = 0;\r\n        event.target.value = null;\r\n    }\r\n    uploadFiles() {\r\n        this.progressBarShow = true;\r\n        this.uploadStarted = true;\r\n        this.notAllowedFiles = [];\r\n        let isError = false;\r\n        this.isAllowedFileSingle = this.allowedFiles.length <= 1;\r\n        const formData = new FormData();\r\n        // Add data to be sent in this request\r\n        this.allowedFiles.forEach((file, i) => {\r\n            formData.append(this.Caption[i] || 'file' + (this.fileNameIndex ? i : ''), this.allowedFiles[i]);\r\n        });\r\n        /*\r\n        Not Working, Headers null\r\n        // Contruct Headers\r\n        const headers = new HttpHeaders();\r\n        for (const key of Object.keys(this.headers)) {\r\n          headers.append(key, this.headers[key]);\r\n        }\r\n    \r\n        // Contruct Params\r\n        const params = new HttpParams();\r\n        for (const key of Object.keys(this.params)) {\r\n          params.append(key, this.params[key]);\r\n        } */\r\n        const options = {\r\n            headers: this.headers,\r\n            params: this.params,\r\n        };\r\n        if (this.responseType)\r\n            options.responseType = this.responseType;\r\n        this.http\r\n            .request(this.method.toUpperCase(), this.uploadAPI, Object.assign({ body: formData, reportProgress: true, observe: 'events' }, options))\r\n            .subscribe((event) => {\r\n            // Upload Progress\r\n            if (event.type === HttpEventType.UploadProgress) {\r\n                this.enableUploadBtn = false; // button should be disabled if process uploading\r\n                const currentDone = event.loaded / event.total;\r\n                this.uploadPercent = Math.round((event.loaded / event.total) * 100);\r\n            }\r\n            else if (event.type === HttpEventType.Response) {\r\n                if (event.status === 200 || event.status === 201) {\r\n                    // Success\r\n                    this.progressBarShow = false;\r\n                    this.enableUploadBtn = false;\r\n                    this.uploadMsg = true;\r\n                    this.afterUpload = true;\r\n                    if (!isError) {\r\n                        this.uploadMsgText = this.replaceTexts.afterUploadMsg_success;\r\n                        this.uploadMsgClass = 'text-success lead';\r\n                    }\r\n                }\r\n                else {\r\n                    // Failure\r\n                    isError = true;\r\n                    this.handleErrors();\r\n                }\r\n                this.ApiResponse.emit(event);\r\n            }\r\n            else {\r\n                //console.log('Event Other: ', event);\r\n            }\r\n        }, (error) => {\r\n            // Failure\r\n            isError = true;\r\n            this.handleErrors();\r\n            this.ApiResponse.emit(error);\r\n        });\r\n    }\r\n    handleErrors() {\r\n        this.progressBarShow = false;\r\n        this.enableUploadBtn = false;\r\n        this.uploadMsg = true;\r\n        this.afterUpload = true;\r\n        this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\r\n        this.uploadMsgClass = 'text-danger lead';\r\n    }\r\n    removeFile(i, sf_na) {\r\n        if (sf_na === 'sf') {\r\n            this.allowedFiles.splice(i, 1);\r\n            this.Caption.splice(i, 1);\r\n        }\r\n        else {\r\n            this.notAllowedFiles.splice(i, 1);\r\n        }\r\n        if (this.allowedFiles.length === 0) {\r\n            this.enableUploadBtn = false;\r\n        }\r\n    }\r\n    convertSize(fileSize) {\r\n        return fileSize < 1024000\r\n            ? (fileSize / 1024).toFixed(2) + ' KB'\r\n            : (fileSize / 1024000).toFixed(2) + ' MB';\r\n    }\r\n    attachpinOnclick() {\r\n        const element = document.getElementById('sel' + this.id);\r\n        if (element !== null) {\r\n            element.click();\r\n        }\r\n    }\r\n    drop(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        this.onChange(event);\r\n    }\r\n    allowDrop(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'copy';\r\n    }\r\n}\nAngularFileUploaderComponent.ɵfac = function AngularFileUploaderComponent_Factory(t) { return new (t || AngularFileUploaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient, 4)); };\nAngularFileUploaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AngularFileUploaderComponent, selectors: [[\"angular-file-uploader\"]], inputs: { resetUpload: \"resetUpload\", config: \"config\" }, outputs: { ApiResponse: \"ApiResponse\", everythingDone: \"everythingDone\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"container\", \"id\", \"default\", 4, \"ngIf\"], [\"id\", \"attachPin\", 4, \"ngIf\"], [\"id\", \"default\", 1, \"container\"], [\"id\", \"dragNDrop\", \"class\", \"dragNDrop\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"btn btn-primary btn-sm afu-select-btn\", 3, \"for\", 4, \"ngIf\"], [\"type\", \"file\", \"style\", \"display: none\", \"title\", \"Select file\", \"name\", \"files[]\", 3, \"id\", \"accept\", \"change\", 4, \"ngIf\"], [\"class\", \"btn btn-info btn-sm resetBtn afu-reset-btn\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"constraints-info\", \"afu-constraints-info\"], [\"class\", \"row afu-valid-file\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row text-danger afu-invalid-file\", 4, \"ngFor\", \"ngForOf\"], [3, \"class\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"afu-upload-btn\", 3, \"disabled\", \"click\"], [\"id\", \"dragNDrop\", 1, \"dragNDrop\", 3, \"ngClass\"], [2, \"position\", \"relative\"], [\"id\", \"div1\", 1, \"div1\", \"afu-dragndrop-box\", 3, \"drop\", \"dragover\"], [1, \"afu-dragndrop-text\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"afu-select-btn\", 3, \"for\"], [\"type\", \"file\", \"title\", \"Select file\", \"name\", \"files[]\", 2, \"display\", \"none\", 3, \"id\", \"accept\", \"change\"], [1, \"btn\", \"btn-info\", \"btn-sm\", \"resetBtn\", \"afu-reset-btn\", 3, \"click\"], [1, \"row\", \"afu-valid-file\"], [1, \"col-xs-3\", \"textOverflow\"], [1, \"text-primary\"], [1, \"col-xs-3\", \"padMarg\", \"sizeC\"], [\"class\", \"progress col-xs-3 padMarg afu-progress-bar\", 4, \"ngIf\"], [\"class\", \"col-xs-1\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"progress\", \"col-xs-3\", \"padMarg\", \"afu-progress-bar\"], [\"role\", \"progressbar\", 1, \"progress-bar\", \"progress-bar-success\", 3, \"ngStyle\"], [\"role\", \"button\", 1, \"col-xs-1\", 3, \"click\"], [1, \"fa\", \"fa-times\"], [1, \"row\", \"text-danger\", \"afu-invalid-file\"], [1, \"col-xs-3\"], [\"class\", \"col-xs-1 delFileIcon\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"button\", 1, \"col-xs-1\", \"delFileIcon\", 3, \"click\"], [1, \"progress\", \"col-xs-4\", \"padMarg\", \"afu-progress-bar\"], [\"id\", \"attachPin\"], [2, \"position\", \"relative\", \"padding-left\", \"6px\"], [1, \"btn\", \"up_btn\", \"afu-attach-pin\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-paperclip\"], [1, \"label\", \"label-info\", 3, \"id\"]], template: function AngularFileUploaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, AngularFileUploaderComponent_div_0_Template, 16, 14, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_1_Template, 10, 6, \"div\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme !== \"attachPin\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme == \"attachPin\");\n    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc2.NgClass, ɵngcc2.NgStyle], styles: [\".constraints-info[_ngcontent-%COMP%]{font-style:italic;margin-top:10px}.padMarg[_ngcontent-%COMP%]{margin-bottom:0;padding:0}.caption[_ngcontent-%COMP%]{margin-right:5px}.textOverflow[_ngcontent-%COMP%]{overflow:hidden;padding-right:0;text-overflow:ellipsis;white-space:nowrap}.up_btn[_ngcontent-%COMP%]{background-color:transparent;border:2px solid #5c5b5b;border-radius:22px;color:#000}.delFileIcon[_ngcontent-%COMP%]{color:#ce0909;text-decoration:none}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%]{border:2px dashed #5c5b5b;display:border-box;height:6rem;width:20rem}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{color:#5c5b5b;font-weight:700;margin-top:1.4em;text-align:center}.dragNDropBtmPad[_ngcontent-%COMP%]{padding-bottom:2rem}@media screen and (max-width:620px){.caption[_ngcontent-%COMP%]{padding:0}}@media screen and (max-width:510px){.sizeC[_ngcontent-%COMP%]{width:25%}}@media screen and (max-width:260px){.caption[_ngcontent-%COMP%], .sizeC[_ngcontent-%COMP%]{font-size:10px}}.resetBtn[_ngcontent-%COMP%]{margin-left:3px}\"] });\r\nAngularFileUploaderComponent.ctorParameters = () => [\r\n    { type: HttpClient, decorators: [{ type: SkipSelf }] }\r\n];\r\nAngularFileUploaderComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    resetUpload: [{ type: Input }],\r\n    ApiResponse: [{ type: Output }],\r\n    everythingDone: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFileUploaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'angular-file-uploader',\n                template: \"<div class=\\\"container\\\" *ngIf=\\\"(theme !== 'attachPin')\\\" id=\\\"default\\\">\\r\\n\\r\\n  <!-- Drag n Drop theme Starts -->\\r\\n  <div *ngIf=\\\"theme == 'dragNDrop'\\\" id=\\\"dragNDrop\\\"\\r\\n    [ngClass]=\\\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\\\" class=\\\"dragNDrop\\\">\\r\\n    <div style=\\\"position:relative;\\\">\\r\\n      <div id=\\\"div1\\\" class=\\\"div1 afu-dragndrop-box\\\" (drop)=\\\"drop($event)\\\" (dragover)=\\\"allowDrop($event)\\\">\\r\\n        <p class=\\\"afu-dragndrop-text\\\">{{replaceTexts?.dragNDropBox}}</p>\\r\\n      </div>\\r\\n      <!-- <span class='label label-info' id=\\\"upload-file-info{{id}}\\\">{{allowedFiles[0]?.name}}</span> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Drag n Drop theme Ends -->\\r\\n  <label for=\\\"sel{{id}}\\\" class=\\\"btn btn-primary btn-sm afu-select-btn\\\"\\r\\n    *ngIf=\\\"!hideSelectBtn\\\">{{replaceTexts?.selectFileBtn}}</label>\\r\\n  <input type=\\\"file\\\" id=\\\"sel{{id}}\\\" style=\\\"display: none\\\" *ngIf=\\\"!hideSelectBtn\\\" (change)=\\\"onChange($event)\\\"\\r\\n    title=\\\"Select file\\\" name=\\\"files[]\\\" [accept]=formatsAllowed [attr.multiple]=\\\"multiple ? '' : null\\\" />\\r\\n  <button class=\\\"btn btn-info btn-sm resetBtn afu-reset-btn\\\" (click)=\\\"resetFileUpload()\\\"\\r\\n    *ngIf=\\\"!hideResetBtn\\\">{{replaceTexts?.resetBtn}}</button>\\r\\n  <br *ngIf=\\\"!hideSelectBtn\\\">\\r\\n  <p class=\\\"constraints-info afu-constraints-info\\\">({{formatsAllowed}}) {{replaceTexts?.sizeLimit}}: {{(convertSize(maxSize))}}\\r\\n  </p>\\r\\n  <!--Allowed file list-->\\r\\n  <div class=\\\"row afu-valid-file\\\" *ngFor=\\\"let sf of allowedFiles;let i=index\\\">\\r\\n    <p class=\\\"col-xs-3 textOverflow\\\"><span class=\\\"text-primary\\\">{{sf.name}}</span></p>\\r\\n    <p class=\\\"col-xs-3 padMarg sizeC\\\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\\r\\n    <!--  <input class=\\\"col-xs-3 progress caption\\\"  type=\\\"text\\\"  placeholder=\\\"Caption..\\\"  [(ngModel)]=\\\"Caption[i]\\\"  *ngIf=\\\"!uploadStarted\\\"/> -->\\r\\n    <div class=\\\"progress col-xs-3 padMarg afu-progress-bar\\\" *ngIf=\\\"isAllowedFileSingle && progressBarShow && !hideProgressBar\\\">\\r\\n      <span class=\\\"progress-bar progress-bar-success\\\" role=\\\"progressbar\\\"\\r\\n        [ngStyle]=\\\"{'width':uploadPercent+'%'}\\\">{{uploadPercent}}%</span>\\r\\n    </div>\\r\\n    <a class=\\\"col-xs-1\\\" role=\\\"button\\\" (click)=\\\"removeFile(i,'sf')\\\" *ngIf=\\\"!uploadStarted\\\"><i class=\\\"fa fa-times\\\"></i></a>\\r\\n  </div>\\r\\n  <!--Not Allowed file list-->\\r\\n  <div class=\\\"row text-danger afu-invalid-file\\\" *ngFor=\\\"let na of notAllowedFiles;let j=index\\\">\\r\\n    <p class=\\\"col-xs-3 textOverflow\\\"><span>{{na['fileName']}}</span></p>\\r\\n    <p class=\\\"col-xs-3 padMarg sizeC\\\"><strong>({{na['fileSize']}})</strong></p>\\r\\n    <p class=\\\"col-xs-3 \\\">{{na['errorMsg']}}</p>\\r\\n    <a class=\\\"col-xs-1 delFileIcon\\\" role=\\\"button\\\" (click)=\\\"removeFile(j,'na')\\\" *ngIf=\\\"!uploadStarted\\\">&nbsp;<i\\r\\n        class=\\\"fa fa-times\\\"></i></a>\\r\\n  </div>\\r\\n\\r\\n  <p *ngIf=\\\"uploadMsg\\\" class=\\\"{{uploadMsgClass}} + afu-upload-status\\\">{{uploadMsgText}}<p>\\r\\n      <div *ngIf=\\\"!isAllowedFileSingle && progressBarShow && !hideProgressBar\\\">\\r\\n        <div class=\\\"progress col-xs-4 padMarg afu-progress-bar\\\">\\r\\n          <span class=\\\"progress-bar progress-bar-success\\\" role=\\\"progressbar\\\"\\r\\n            [ngStyle]=\\\"{'width':uploadPercent+'%'}\\\">{{uploadPercent}}%</span>\\r\\n        </div>\\r\\n        <br>\\r\\n        <br>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-success afu-upload-btn\\\" type=\\\"button\\\" (click)=\\\"uploadFiles()\\\"\\r\\n        [disabled]=!enableUploadBtn>{{replaceTexts?.uploadBtn}}</button>\\r\\n      <br>\\r\\n</div>\\r\\n\\r\\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\\r\\n<div *ngIf=\\\"theme == 'attachPin'\\\" id=\\\"attachPin\\\">\\r\\n  <div style=\\\"position:relative;padding-left:6px\\\">\\r\\n    <a class='btn up_btn afu-attach-pin' (click)=\\\"attachpinOnclick()\\\">\\r\\n      {{replaceTexts?.attachPinBtn}}\\r\\n      <i class=\\\"fa fa-paperclip\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <!-- <p style=\\\"margin-top:10px\\\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize))}}</p> -->\\r\\n      <input type=\\\"file\\\" id=\\\"sel{{id}}\\\" (change)=\\\"onChange($event)\\\" style=\\\"display: none\\\" title=\\\"Select file\\\"\\r\\n        name=\\\"files[]\\\" [accept]=formatsAllowed [attr.multiple]=\\\"multiple ? '' : null\\\" />\\r\\n      <br>\\r\\n    </a>\\r\\n    &nbsp;\\r\\n    <span class='label label-info' id=\\\"upload-file-info{{id}}\\\">{{allowedFiles[0]?.name}}</span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\",\n                styles: [\".constraints-info{font-style:italic;margin-top:10px}.padMarg{margin-bottom:0;padding:0}.caption{margin-right:5px}.textOverflow{overflow:hidden;padding-right:0;text-overflow:ellipsis;white-space:nowrap}.up_btn{background-color:transparent;border:2px solid #5c5b5b;border-radius:22px;color:#000}.delFileIcon{color:#ce0909;text-decoration:none}.dragNDrop .div1{border:2px dashed #5c5b5b;display:border-box;height:6rem;width:20rem}.dragNDrop .div1>p{color:#5c5b5b;font-weight:700;margin-top:1.4em;text-align:center}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: SkipSelf\n            }] }]; }, { resetUpload: [{\n            type: Input\n        }], ApiResponse: [{\n            type: Output\n        }], everythingDone: [{\n            type: Output\n        }], config: [{\n            type: Input\n        }] }); })();\n\nclass AngularFileUploaderModule {\r\n}\nAngularFileUploaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFileUploaderModule });\nAngularFileUploaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFileUploaderModule_Factory(t) { return new (t || AngularFileUploaderModule)(); }, imports: [[\n            CommonModule,\n            HttpClientModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularFileUploaderModule, { declarations: function () { return [AngularFileUploaderComponent]; }, imports: function () { return [CommonModule,\n        HttpClientModule]; }, exports: function () { return [AngularFileUploaderComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFileUploaderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    HttpClientModule,\n                ],\n                declarations: [AngularFileUploaderComponent],\n                exports: [AngularFileUploaderComponent]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of angular-file-uploader\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AngularFileUploaderComponent, AngularFileUploaderModule };\n\n//# sourceMappingURL=angular-file-uploader.js.map"],"sourceRoot":"webpack:///"}